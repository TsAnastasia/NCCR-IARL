"use strict";(self.webpackChunktemplate=self.webpackChunktemplate||[]).push([[29],{8029:(e,a,s)=>{s.r(a),s.d(a,{default:()=>c});var l=s(9982),n=s(5893);const c=function(){return(0,n.jsxs)("main",{children:[(0,n.jsx)(l.Z,{children:"Рекомендации по написанию кода"}),(0,n.jsx)("div",{children:"Для наименования переменных рекомендуется применять `camelCase`. Исключения: данные, связанные с api (возможен `snake_case`, зависит от бэкенд-разработчика) и константы (`UPPER_SNAKE_CASE`). Для написания компонентов рекомендуется придерживаться функционального подхода, т.к. классовый – считается устаревшим. Функции передаваемые в компоненты ниже рекомендуется создавать с помощью хука useCallback. Все хуки принято именовать, начиная с `use...`. Если размер кода компонента превышает 120 строк, то рекомендуется разбить его на более мелкие компоненты. Компоненты-страницы и большие самостоятельные компоненты рекомендуется подгружать с помощью lazy loading, при этом место их вставки необходимо обернуть в компонент Suspense. Если код функциональной части компонента (не JSX) получается большого объема, то возможно лучше создать отдельный hook для нее. Информацию о загрузке, успехе и ошибке запроса к api рекомендуется брать напрямую из соответствующего хука api, а не записывать эти данные в глобальное хранилище приложения."})]})}}}]);
//# sourceMappingURL=29.chunk.js.map